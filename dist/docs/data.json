{
    "project": {
        "name": "SemanticJS",
        "description": "A free and open source Javascript library for building Semantic Web and Linked Data applications.",
        "url": "http://semanticjs.oguzgelal.com",
        "logo": "http://i.imgur.com/dcLg0MG.png",
        "version": "1.0.0"
    },
    "files": {
        "src/API/Semant.js": {
            "name": "src/API/Semant.js",
            "modules": {},
            "classes": {
                "API.Semant": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/CORE/Entity/Entity.js": {
            "name": "src/CORE/Entity/Entity.js",
            "modules": {},
            "classes": {
                "CORE.Entity": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/CORE/Entity/createEntity.js": {
            "name": "src/CORE/Entity/createEntity.js",
            "modules": {},
            "classes": {},
            "fors": {
                "CORE.Ontology": 1
            },
            "namespaces": {}
        },
        "src/CORE/Entity/createSubEntity.js": {
            "name": "src/CORE/Entity/createSubEntity.js",
            "modules": {},
            "classes": {},
            "fors": {
                "CORE.Entity": 1
            },
            "namespaces": {}
        },
        "src/CORE/Entity/makeSubEntity.js": {
            "name": "src/CORE/Entity/makeSubEntity.js",
            "modules": {},
            "classes": {},
            "fors": {
                "CORE.Entity": 1
            },
            "namespaces": {}
        },
        "src/CORE/Exception/Exception.js": {
            "name": "src/CORE/Exception/Exception.js",
            "modules": {},
            "classes": {
                "CORE.Exception": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/CORE/Exception/addRelationException.js": {
            "name": "src/CORE/Exception/addRelationException.js",
            "modules": {},
            "classes": {
                "CORE.Exception.addRelationException": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/CORE/Exception/createEntityException.js": {
            "name": "src/CORE/Exception/createEntityException.js",
            "modules": {},
            "classes": {
                "CORE.Exception.createEntityException": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/CORE/Exception/createLiteralException.js": {
            "name": "src/CORE/Exception/createLiteralException.js",
            "modules": {},
            "classes": {
                "CORE.Exception.createLiteralException": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/CORE/Exception/createOntologyException.js": {
            "name": "src/CORE/Exception/createOntologyException.js",
            "modules": {},
            "classes": {
                "CORE.Exception.createOntologyException": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/CORE/Exception/createRelationException.js": {
            "name": "src/CORE/Exception/createRelationException.js",
            "modules": {},
            "classes": {
                "CORE.Exception.createRelationException": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/CORE/Exception/createURIException.js": {
            "name": "src/CORE/Exception/createURIException.js",
            "modules": {},
            "classes": {
                "CORE.Exception.createURIException": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/CORE/Exception/exportOWLException.js": {
            "name": "src/CORE/Exception/exportOWLException.js",
            "modules": {},
            "classes": {
                "CORE.Exception.exportOWLException": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/CORE/Exception/makeSubEntityException.js": {
            "name": "src/CORE/Exception/makeSubEntityException.js",
            "modules": {},
            "classes": {
                "CORE.Exception.makeSubEntityException": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/CORE/Export/Export.js": {
            "name": "src/CORE/Export/Export.js",
            "modules": {},
            "classes": {
                "CORE.Export": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/CORE/Export/exportOWL.js": {
            "name": "src/CORE/Export/exportOWL.js",
            "modules": {},
            "classes": {},
            "fors": {
                "CORE.Export": 1
            },
            "namespaces": {}
        },
        "src/CORE/Literal/Literal.js": {
            "name": "src/CORE/Literal/Literal.js",
            "modules": {},
            "classes": {
                "CORE.Literal": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/CORE/Literal/createLiteral.js": {
            "name": "src/CORE/Literal/createLiteral.js",
            "modules": {},
            "classes": {},
            "fors": {
                "CORE.Ontology": 1
            },
            "namespaces": {}
        },
        "src/CORE/Ontology/Ontology.js": {
            "name": "src/CORE/Ontology/Ontology.js",
            "modules": {},
            "classes": {
                "CORE.Ontology": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/CORE/Ontology/createOntology.js": {
            "name": "src/CORE/Ontology/createOntology.js",
            "modules": {},
            "classes": {},
            "fors": {
                "API.Semant": 1
            },
            "namespaces": {}
        },
        "src/CORE/Relation/Relation.js": {
            "name": "src/CORE/Relation/Relation.js",
            "modules": {},
            "classes": {
                "CORE.Relation": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/CORE/Relation/addRelation.js": {
            "name": "src/CORE/Relation/addRelation.js",
            "modules": {},
            "classes": {},
            "fors": {
                "CORE.Entity": 1
            },
            "namespaces": {}
        },
        "src/CORE/Relation/createRelation.js": {
            "name": "src/CORE/Relation/createRelation.js",
            "modules": {},
            "classes": {},
            "fors": {
                "CORE.Ontology": 1
            },
            "namespaces": {}
        },
        "src/CORE/Utils/Utils.js": {
            "name": "src/CORE/Utils/Utils.js",
            "modules": {},
            "classes": {
                "CORE.Utils": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/CORE/Utils/createURI.js": {
            "name": "src/CORE/Utils/createURI.js",
            "modules": {},
            "classes": {},
            "fors": {
                "CORE.Utils": 1
            },
            "namespaces": {}
        },
        "src/CORE/Utils/randomString.js": {
            "name": "src/CORE/Utils/randomString.js",
            "modules": {},
            "classes": {},
            "fors": {
                "CORE.Utils": 1
            },
            "namespaces": {}
        },
        "src/CORE/Utils/stripDomain.js": {
            "name": "src/CORE/Utils/stripDomain.js",
            "modules": {},
            "classes": {},
            "fors": {
                "CORE.Utils": 1
            },
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "API.Semant": {
            "name": "API.Semant",
            "shortname": "API.Semant",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/API/Semant.js",
            "line": 1,
            "description": "Base class of the API.",
            "static": 1
        },
        "CORE.Entity": {
            "name": "CORE.Entity",
            "shortname": "CORE.Entity",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/CORE/Entity/Entity.js",
            "line": 1,
            "is_constructor": 1,
            "params": [
                {
                    "name": "name",
                    "description": "Name of the entity",
                    "type": "String"
                }
            ]
        },
        "CORE.Ontology": {
            "name": "CORE.Ontology",
            "shortname": "CORE.Ontology",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/CORE/Ontology/Ontology.js",
            "line": 1,
            "description": "General ontology that will contain all the entities, relationships and literals.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "name",
                    "description": "Name of the Ontology.",
                    "type": "String"
                },
                {
                    "name": "domain",
                    "description": "Domain of the Ontology.",
                    "type": "String"
                }
            ]
        },
        "CORE.Exception": {
            "name": "CORE.Exception",
            "shortname": "CORE.Exception",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/CORE/Exception/Exception.js",
            "line": 1,
            "description": "Exception base class of SemantJS.",
            "is_constructor": 1
        },
        "CORE.Exception.addRelationException": {
            "name": "CORE.Exception.addRelationException",
            "shortname": "CORE.Exception.addRelationException",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/CORE/Exception/addRelationException.js",
            "line": 1,
            "description": "Relation cannot be added exception",
            "is_constructor": 1,
            "params": [
                {
                    "name": "message",
                    "description": "Information on why the relation could not be added.",
                    "type": "String"
                }
            ],
            "extends": "CORE.Exception"
        },
        "CORE.Exception.createEntityException": {
            "name": "CORE.Exception.createEntityException",
            "shortname": "CORE.Exception.createEntityException",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/CORE/Exception/createEntityException.js",
            "line": 1,
            "description": "Entity cannot be created exception",
            "is_constructor": 1,
            "params": [
                {
                    "name": "message",
                    "description": "Information on why the entity could not be created.",
                    "type": "String"
                }
            ],
            "extends": "CORE.Exception"
        },
        "CORE.Exception.createLiteralException": {
            "name": "CORE.Exception.createLiteralException",
            "shortname": "CORE.Exception.createLiteralException",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/CORE/Exception/createLiteralException.js",
            "line": 1,
            "description": "Literal cannot be created exception",
            "is_constructor": 1,
            "params": [
                {
                    "name": "message",
                    "description": "Information on why the literal could not be created.",
                    "type": "String"
                }
            ],
            "extends": "CORE.Exception"
        },
        "CORE.Exception.createOntologyException": {
            "name": "CORE.Exception.createOntologyException",
            "shortname": "CORE.Exception.createOntologyException",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/CORE/Exception/createOntologyException.js",
            "line": 1,
            "description": "Ontology cannot be created exception",
            "is_constructor": 1,
            "params": [
                {
                    "name": "message",
                    "description": "Information on why the ontology could not be created.",
                    "type": "String"
                }
            ],
            "extends": "CORE.Exception"
        },
        "CORE.Exception.createRelationException": {
            "name": "CORE.Exception.createRelationException",
            "shortname": "CORE.Exception.createRelationException",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/CORE/Exception/createRelationException.js",
            "line": 1,
            "description": "Relation cannot be created exception",
            "is_constructor": 1,
            "params": [
                {
                    "name": "message",
                    "description": "Information on why the relation could not be created.",
                    "type": "String"
                }
            ],
            "extends": "CORE.Exception"
        },
        "CORE.Exception.createURIException": {
            "name": "CORE.Exception.createURIException",
            "shortname": "CORE.Exception.createURIException",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/CORE/Exception/createURIException.js",
            "line": 1,
            "description": "URI cannot be generated",
            "is_constructor": 1,
            "params": [
                {
                    "name": "message",
                    "description": "Information on why the URI could not be generated.",
                    "type": "String"
                }
            ],
            "extends": "CORE.Exception"
        },
        "CORE.Exception.exportOWLException": {
            "name": "CORE.Exception.exportOWLException",
            "shortname": "CORE.Exception.exportOWLException",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/CORE/Exception/exportOWLException.js",
            "line": 1,
            "description": "Ontology cannot be exported into OWL format",
            "is_constructor": 1,
            "params": [
                {
                    "name": "message",
                    "description": "Information on why the export cannot be completed.",
                    "type": "String"
                }
            ],
            "extends": "CORE.Exception"
        },
        "CORE.Exception.makeSubEntityException": {
            "name": "CORE.Exception.makeSubEntityException",
            "shortname": "CORE.Exception.makeSubEntityException",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/CORE/Exception/makeSubEntityException.js",
            "line": 1,
            "description": "Make sub entity failed",
            "is_constructor": 1,
            "params": [
                {
                    "name": "message",
                    "description": "Information on why the entity could not be created.",
                    "type": "String"
                }
            ],
            "extends": "CORE.Exception"
        },
        "CORE.Export": {
            "name": "CORE.Export",
            "shortname": "CORE.Export",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/CORE/Export/Export.js",
            "line": 1,
            "static": 1
        },
        "CORE.Literal": {
            "name": "CORE.Literal",
            "shortname": "CORE.Literal",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/CORE/Literal/Literal.js",
            "line": 1,
            "is_constructor": 1,
            "params": [
                {
                    "name": "value",
                    "description": "Value of the literal",
                    "type": "String"
                }
            ]
        },
        "CORE.Relation": {
            "name": "CORE.Relation",
            "shortname": "CORE.Relation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/CORE/Relation/Relation.js",
            "line": 1,
            "is_constructor": 1,
            "params": [
                {
                    "name": "name",
                    "description": "Name of the relation",
                    "type": "String"
                }
            ]
        },
        "CORE.Utils": {
            "name": "CORE.Utils",
            "shortname": "CORE.Utils",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/CORE/Utils/Utils.js",
            "line": 1,
            "description": "Static class that contains the utilities.",
            "static": 1
        }
    },
    "classitems": [
        {
            "file": "src/API/Semant.js",
            "line": 11,
            "description": "List of created ontologies",
            "itemtype": "property",
            "name": "ontologies",
            "type": "Object",
            "default": "{}",
            "class": "API.Semant"
        },
        {
            "file": "src/API/Semant.js",
            "line": 18,
            "description": "List of occupaid domains",
            "itemtype": "property",
            "name": "occupiedDomains",
            "type": "Array",
            "default": "[]",
            "class": "API.Semant"
        },
        {
            "file": "src/API/Semant.js",
            "line": 29,
            "description": "Export object",
            "itemtype": "property",
            "name": "Export",
            "type": "Object",
            "default": "Export Obj",
            "class": "API.Semant"
        },
        {
            "file": "src/API/Semant.js",
            "line": 37,
            "description": "Change debug mode",
            "itemtype": "method",
            "name": "setDebug",
            "params": [
                {
                    "name": "debug",
                    "description": "Set global debug value to this.",
                    "type": "Boolean"
                }
            ],
            "example": [
                "\n\tsemantics.setDebug(true);"
            ],
            "class": "API.Semant"
        },
        {
            "file": "src/API/Semant.js",
            "line": 47,
            "description": "Get debug mode",
            "itemtype": "method",
            "name": "getDebug",
            "return": {
                "description": "Global debug value;",
                "type": "Boolean"
            },
            "example": [
                "\n\tsemantics.getDebug();"
            ],
            "class": "API.Semant"
        },
        {
            "file": "src/API/Semant.js",
            "line": 55,
            "description": "Get version",
            "itemtype": "method",
            "name": "getVersion",
            "return": {
                "description": "Version number;",
                "type": "String"
            },
            "example": [
                "\n\tsemantics.getVersion();"
            ],
            "class": "API.Semant"
        },
        {
            "file": "src/CORE/Entity/Entity.js",
            "line": 10,
            "description": "For identifying an instance",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "class": "CORE.Entity"
        },
        {
            "file": "src/CORE/Entity/Entity.js",
            "line": 16,
            "description": "Name of the entity",
            "itemtype": "property",
            "name": "name",
            "type": "String",
            "class": "CORE.Entity"
        },
        {
            "file": "src/CORE/Entity/Entity.js",
            "line": 22,
            "description": "URI of the entity",
            "itemtype": "property",
            "name": "URI",
            "type": "String",
            "class": "CORE.Entity"
        },
        {
            "file": "src/CORE/Entity/Entity.js",
            "line": 28,
            "description": "The relationships where this entity is the domain. What this variable\nstores is {relationship, entity} or {relationship, literal}. For example\nin a relationship like Istanbul -in-> Turkey, the Istanbul entity would\nstore this relationship in relOut as [[in, Turkey]]",
            "itemtype": "property",
            "name": "relOut",
            "type": "Array",
            "default": "[]",
            "class": "CORE.Entity"
        },
        {
            "file": "src/CORE/Entity/Entity.js",
            "line": 39,
            "description": "The relationships where this entity is the range. What this variable\nstores is {relationship, entity}. For example\nin a relationship like Istanbul -in-> Turkey, the instance Turkey would\nstore this this relationship in relIn as [[in, Istanbul]]",
            "itemtype": "property",
            "name": "relIn",
            "type": "Array",
            "default": "[]",
            "class": "CORE.Entity"
        },
        {
            "file": "src/CORE/Entity/Entity.js",
            "line": 50,
            "description": "Individuals of this entity",
            "itemtype": "property",
            "name": "individuals",
            "type": "Object",
            "class": "CORE.Entity"
        },
        {
            "file": "src/CORE/Entity/Entity.js",
            "line": 56,
            "description": "Sub entities.",
            "itemtype": "property",
            "name": "subs",
            "type": "Object",
            "class": "CORE.Entity"
        },
        {
            "file": "src/CORE/Entity/Entity.js",
            "line": 62,
            "description": "Parent entity.",
            "itemtype": "property",
            "name": "parent",
            "type": "Object",
            "class": "CORE.Entity"
        },
        {
            "file": "src/CORE/Entity/Entity.js",
            "line": 68,
            "description": "The ontology this entity is created under",
            "itemtype": "property",
            "name": "ontology",
            "type": "Object",
            "class": "CORE.Entity"
        },
        {
            "file": "src/CORE/Entity/createEntity.js",
            "line": 1,
            "description": "Creates an entity. Called from the Ontology object.",
            "itemtype": "method",
            "name": "createEntity",
            "throws": {
                "description": "Cannot create entity.",
                "type": "CreateEntityException"
            },
            "params": [
                {
                    "name": "name",
                    "description": "Name of the Entity.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns the created Entity object.",
                "type": "Entity"
            },
            "example": [
                "\n\tvar semantics = new Semant();\n\tvar people = semantics.createOntology(\"People\", \"http://ppl.com\");\n\tvar male = ont_people.createEntity(\"Male\");\n\tvar female = ont_people.createEntity(\"Femal\");"
            ],
            "class": "CORE.Ontology"
        },
        {
            "file": "src/CORE/Entity/createSubEntity.js",
            "line": 1,
            "description": "Creates an entity. Called from another entity object.",
            "itemtype": "method",
            "name": "createSubEntity",
            "throws": {
                "description": "Cannot create entity.",
                "type": "CreateEntityException"
            },
            "params": [
                {
                    "name": "name",
                    "description": "Name of the Entity.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns the created Entity object.",
                "type": "Entity"
            },
            "example": [
                "\n\tvar semantics = new Semant();\n\tvar people = semantics.createOntology(\"People\", \"http://ppl.com\");\n\tvar male = ont_people.createEntity(\"Male\");\n\tvar female = ont_people.createEntity(\"Femal\");"
            ],
            "class": "CORE.Entity"
        },
        {
            "file": "src/CORE/Entity/makeSubEntity.js",
            "line": 1,
            "description": "Makes an entity a sub entity of another.",
            "itemtype": "event",
            "name": "makeSubEntity",
            "throws": {
                "description": "Cannot make sub entity.",
                "type": "MakeSubEntityException"
            },
            "params": [
                {
                    "name": "parentEntity",
                    "description": "Parent object of this soon-to-be sub entity",
                    "type": "Object"
                }
            ],
            "example": [
                "\n\tvar semantics = new Semant();\n\tvar alive = semantics.createOntology(\"Alive\", \"http://alive.com\");\n\tvar people = ont_people.createEntity(\"People\");\n\tvar male = ont_people.createEntity(\"Male\");\n\tvar female = ont_people.createEntity(\"Femal\");\n\tmale.makeSubEntity(people);\n\tfemale.makeSubEntity(people);\n\t// same as doing this:\n\t// people.createSubEntity(\"Male\");\n\t// people.createSubEntity(\"Female\");"
            ],
            "class": "CORE.Entity"
        },
        {
            "file": "src/CORE/Exception/Exception.js",
            "line": 11,
            "itemtype": "property",
            "name": "code",
            "type": "Integer",
            "default": "undefined",
            "class": "CORE.Exception"
        },
        {
            "file": "src/CORE/Exception/Exception.js",
            "line": 17,
            "itemtype": "property",
            "name": "name",
            "type": "String",
            "default": "undefined",
            "class": "CORE.Exception"
        },
        {
            "file": "src/CORE/Exception/Exception.js",
            "line": 23,
            "itemtype": "property",
            "name": "notice",
            "type": "String",
            "default": "undefined",
            "class": "CORE.Exception"
        },
        {
            "file": "src/CORE/Exception/Exception.js",
            "line": 29,
            "itemtype": "property",
            "name": "message",
            "type": "String",
            "default": "undefined",
            "class": "CORE.Exception"
        },
        {
            "file": "src/CORE/Exception/Exception.js",
            "line": 37,
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "Gives a basic description of the exception.",
                "type": "String"
            },
            "class": "CORE.Exception"
        },
        {
            "file": "src/CORE/Exception/Exception.js",
            "line": 44,
            "itemtype": "method",
            "name": "details",
            "return": {
                "description": "Gives a detailed description of the exception.",
                "type": "String"
            },
            "class": "CORE.Exception"
        },
        {
            "file": "src/CORE/Export/exportOWL.js",
            "line": 1,
            "description": "Creates an entity. Called from the Ontology object.",
            "itemtype": "method",
            "name": "exportOWL",
            "throws": {
                "description": "Exportation failed",
                "type": "ExportOWLException"
            },
            "params": [
                {
                    "name": "ontology",
                    "description": "The ontology object",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "Rules of exportation in key / value pairs",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the contents of the OWL file output",
                "type": "String"
            },
            "class": "CORE.Export"
        },
        {
            "file": "src/CORE/Export/exportOWL.js",
            "line": 55,
            "class": "CORE.Export"
        },
        {
            "file": "src/CORE/Export/exportOWL.js",
            "line": 80,
            "class": "CORE.Export"
        },
        {
            "file": "src/CORE/Literal/Literal.js",
            "line": 10,
            "description": "For identifying an instance",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "class": "CORE.Literal"
        },
        {
            "file": "src/CORE/Literal/Literal.js",
            "line": 16,
            "description": "Literal type (\"integer\", \"string\" etc...)",
            "itemtype": "property",
            "name": "literaltype",
            "type": "String",
            "class": "CORE.Literal"
        },
        {
            "file": "src/CORE/Literal/Literal.js",
            "line": 22,
            "description": "URI of the entity",
            "itemtype": "property",
            "name": "URI",
            "type": "String",
            "class": "CORE.Literal"
        },
        {
            "file": "src/CORE/Literal/Literal.js",
            "line": 28,
            "description": "Value of the literal",
            "itemtype": "property",
            "name": "value",
            "type": "Dynamic",
            "class": "CORE.Literal"
        },
        {
            "file": "src/CORE/Literal/Literal.js",
            "line": 34,
            "description": "The ontology this entity is created under",
            "itemtype": "property",
            "name": "ontology",
            "type": "Object",
            "class": "CORE.Literal"
        },
        {
            "file": "src/CORE/Literal/createLiteral.js",
            "line": 1,
            "description": "Creates a literal",
            "itemtype": "method",
            "name": "createLiteral",
            "throws": {
                "description": "Cannot create literal.",
                "type": "CreateLiteralException"
            },
            "params": [
                {
                    "name": "value",
                    "description": "The object of relation to be added.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the created Relation object.",
                "type": "Literal"
            },
            "example": [
                "\n\tvar ppl = semantics.createOntology(\"People\", \"http://ppl.com\");\n\tvar male = ppl.createEntity(\"Male\");\n\tvar female = ppl.createEntity(\"Female\");\n\tvar bornIn = ppl.createRelation(\"bornIn\");\n\tvar oguz = male.createSubEntity(\"Oguz\");\n\tvar oguzYear = ppl.createLiteral(1993);\n\toguz.addRelation(bornIn, oguzYear);"
            ],
            "class": "CORE.Ontology"
        },
        {
            "file": "src/CORE/Ontology/Ontology.js",
            "line": 13,
            "description": "For identifying an instance",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "class": "CORE.Ontology"
        },
        {
            "file": "src/CORE/Ontology/Ontology.js",
            "line": 19,
            "description": "Name of the ontology",
            "itemtype": "property",
            "name": "name",
            "type": "String",
            "class": "CORE.Ontology"
        },
        {
            "file": "src/CORE/Ontology/Ontology.js",
            "line": 25,
            "description": "URI of the ontology",
            "itemtype": "property",
            "name": "URI",
            "type": "String",
            "class": "CORE.Ontology"
        },
        {
            "file": "src/CORE/Ontology/Ontology.js",
            "line": 31,
            "description": "Domain of the ontology where all the URI's will be based on",
            "itemtype": "property",
            "name": "domain",
            "type": "String",
            "default": "undefined",
            "class": "CORE.Ontology"
        },
        {
            "file": "src/CORE/Ontology/Ontology.js",
            "line": 38,
            "itemtype": "property",
            "name": "entityCollection",
            "type": "Object {Entity name, Entity}",
            "default": "{}",
            "class": "CORE.Ontology"
        },
        {
            "file": "src/CORE/Ontology/Ontology.js",
            "line": 44,
            "itemtype": "property",
            "name": "relationCollection",
            "type": "Object {Relation name, Relation}",
            "default": "{}",
            "class": "CORE.Ontology"
        },
        {
            "file": "src/CORE/Ontology/Ontology.js",
            "line": 50,
            "description": "Keeps every URI created under this ontology. Will be used for uniqueness check.",
            "itemtype": "property",
            "name": "occupiedURIs",
            "type": "String Array",
            "default": "[]",
            "class": "CORE.Ontology"
        },
        {
            "file": "src/CORE/Ontology/createOntology.js",
            "line": 1,
            "description": "Creates an ontology",
            "itemtype": "method",
            "name": "createOntology",
            "throws": {
                "description": "Cannot create ontology.",
                "type": "CreateOntologyException"
            },
            "params": [
                {
                    "name": "name",
                    "description": "Name of the ontology.",
                    "type": "String"
                },
                {
                    "name": "domain",
                    "description": "Unique domain of the ontology.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns the created Ontology object.",
                "type": "Ontology"
            },
            "example": [
                "\n\tvar semantics = new Semant();\n\tvar people = semantics.createOntology(\"People\", \"http://ppl.com\");"
            ],
            "class": "API.Semant"
        },
        {
            "file": "src/CORE/Relation/Relation.js",
            "line": 10,
            "description": "For identifying an instance",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "class": "CORE.Relation"
        },
        {
            "file": "src/CORE/Relation/Relation.js",
            "line": 16,
            "description": "Name of the entity",
            "itemtype": "property",
            "name": "name",
            "type": "String",
            "class": "CORE.Relation"
        },
        {
            "file": "src/CORE/Relation/Relation.js",
            "line": 22,
            "description": "URI of the relation",
            "itemtype": "property",
            "name": "URI",
            "type": "String",
            "class": "CORE.Relation"
        },
        {
            "file": "src/CORE/Relation/Relation.js",
            "line": 28,
            "description": "The ontology this entity is created under",
            "itemtype": "property",
            "name": "ontology",
            "type": "Object",
            "class": "CORE.Relation"
        },
        {
            "file": "src/CORE/Relation/Relation.js",
            "line": 34,
            "itemtype": "property",
            "name": "domains",
            "type": "Object {Entity name, Entity}",
            "default": "{}",
            "class": "CORE.Relation"
        },
        {
            "file": "src/CORE/Relation/Relation.js",
            "line": 40,
            "itemtype": "property",
            "name": "ranges",
            "type": "Object {Entity name, Entity}",
            "default": "{}",
            "class": "CORE.Relation"
        },
        {
            "file": "src/CORE/Relation/addRelation.js",
            "line": 1,
            "description": "Adds a relation from an entity to another entity or literal.",
            "itemtype": "event",
            "name": "addRelation",
            "throws": {
                "description": "Cannot add relation.",
                "type": "AddRelationException"
            },
            "params": [
                {
                    "name": "relation",
                    "description": "The object of relation to be added.",
                    "type": "Object"
                },
                {
                    "name": "target",
                    "description": "The target object. Could be an entity or literal object.",
                    "type": "Object"
                }
            ],
            "example": [
                "\n\tvar semantics = new Semant();\n\tvar geo = semantics.createOntology(\"Geo\", \"http://geo.com\");\n\tvar in = geo.createRelation(\"in\");\n\tvar turkey = geo.createEntity(\"Turkey\");\n\tvar istanbul = geo.createEntity(\"Istanbul\");\n\tistanbul.addRelation(in, turkey);"
            ],
            "class": "CORE.Entity"
        },
        {
            "file": "src/CORE/Relation/createRelation.js",
            "line": 1,
            "description": "Creates a relation.",
            "itemtype": "method",
            "name": "createRelation",
            "throws": {
                "description": "Cannot create relation.",
                "type": "CreateRelationException"
            },
            "params": [
                {
                    "name": "relation",
                    "description": "The object of relation to be added.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns the created Relation object.",
                "type": "Relation"
            },
            "example": [
                "\n\tvar semantics = new Semant();\n\tvar geo = semantics.createOntology(\"Geo\", \"http://geo.com\");\n\tvar in = geo.createRelation(\"in\");"
            ],
            "class": "CORE.Ontology"
        },
        {
            "file": "src/CORE/Utils/createURI.js",
            "line": 1,
            "description": "Generates URI for objects.",
            "itemtype": "method",
            "name": "createURI",
            "params": [
                {
                    "name": "name",
                    "description": "Name of the item which the URI will be created.",
                    "type": "String"
                },
                {
                    "name": "domain",
                    "description": "Under what domain the URI will be created",
                    "type": "String"
                },
                {
                    "name": "path",
                    "description": "The type of item.",
                    "type": "String"
                }
            ],
            "example": [
                "\n\tconsole.log(createURI(\"People\", \"http://abc.com\", \"ontology\")); //will output - http://abc.com/ontology/People"
            ],
            "class": "CORE.Utils"
        },
        {
            "file": "src/CORE/Utils/randomString.js",
            "line": 1,
            "description": "Creates a random string",
            "itemtype": "method",
            "name": "randomString",
            "params": [
                {
                    "name": "n",
                    "description": "The lenght of the random string to be created",
                    "type": "Integer"
                }
            ],
            "class": "CORE.Utils"
        },
        {
            "file": "src/CORE/Utils/stripDomain.js",
            "line": 1,
            "description": "Converts the domain into the desired form",
            "itemtype": "method",
            "name": "stripDomain",
            "params": [
                {
                    "name": "domain",
                    "description": "Domain to be converted.",
                    "type": "String"
                }
            ],
            "class": "CORE.Utils"
        }
    ],
    "warnings": [
        {
            "message": "Missing item type",
            "line": " src/CORE/Export/exportOWL.js:55"
        },
        {
            "message": "Missing item type",
            "line": " src/CORE/Export/exportOWL.js:80"
        }
    ]
}