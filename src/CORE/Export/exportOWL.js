/**
Creates an entity. Called from the Ontology object.

@method exportOWL
@for CORE.Export
@throws {exportOWLException} Exportation failed
@param {Object} ontology The ontology object
@param {Object} options Rules of exportation in key / value pairs
@return {String} Returns the contents of the OWL file output
*/

define(function(){
	
	function _initialise(ontology, options){
		var plug = "";
		// xml version
		plug+="<?xml version='1.0'?> \n\n";
		// doctype
		plug+="<!DOCTYPE rdf:RDF [\n";
		plug+="<!ENTITY owl 'http://www.w3.org/2002/07/owl#' >\n";
		plug+="<!ENTITY xsd 'http://www.w3.org/2001/XMLSchema#' >\n";
		plug+="<!ENTITY rdfs 'http://www.w3.org/2000/01/rdf-schema#' >\n";
		plug+="<!ENTITY rdf 'http://www.w3.org/1999/02/22-rdf-syntax-ns#' >\n";
		plug+="]>\n\n";
		// rdf start
		plug+="<rdf:RDF xmlns='"+ontology.domain+"'\n";
		plug+="xml:base='"+ontology.domain+"'\n";
		plug+="xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#'\n";
		plug+="xmlns:owl='http://www.w3.org/2002/07/owl#'\n";
		plug+="xmlns:xsd='http://www.w3.org/2001/XMLSchema#'\n";
		plug+="xmlns:rdfs='http://www.w3.org/2000/01/rdf-schema#'>\n\n";
		return plug;
	}
	function _finalise(options){
		var plug = "";
		plug+="</rdf:RDF>\n\n";
		plug+="<!-- Generated by SemanticJS (by Oguz Gelal) v"+SEMANTICS.version+" https://github.com/oguzgelal/SemanticJS -->\n";
		return plug;
	}
	function _plugOntology(ontology, options){
		var plug = "";
		plug+="<owl:Ontology rdf:about='"+ontology.URI+"'/>\n\n";
		return plug;
	}
	function _plugRelation(relation, options){
		var plug = "";
		plug+="<!-- "+relation.URI+" -->\n";
		plug+="<owl:ObjectProperty rdf:about='"+relation.URI+"'>\n";
		// add domain data
		if (relation.domains.length > 0){
			plug+="<rdfs:domain>\n";
			plug+="<owl:Class>\n";
			for(var i=0; i<relation.domains.length; i++){
			}
			plug+="</owl:Class>\n";
			plug+="</rdfs:domain>\n";
		}
		plug+="</owl:ObjectProperty>\n\n";
		return plug;
	}
	function _plugRelations(ontology, options){
		var plug = "";
		plug+="<!--\n"; 
		plug+="///////////////////////////////////////////////////////////////////////////////////////\n";
		plug+="// Object Properties\n";
		plug+="///////////////////////////////////////////////////////////////////////////////////////\n";
		plug+="-->\n\n";
		for(var key in ontology.relationCollection){
			plug += _plugRelation(ontology.relationCollection[key], {});
		}
		return plug;
	}
	function exportOWL(ontology, options){
		var output = "";
		// initialise output
		output += _initialise(ontology, {});
		// initialise ontology
		output += _plugOntology(ontology, {});
		// print object properties (relations)
		output += _plugRelations(ontology, {});
		// finalise output
		output += _finalise({});
		return output;
	}

	return exportOWL;
});